AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: dva-02-004
    
  BottlePort:
    Type: Number
    Default: 8080
    
  DockerHubPassword:
    Type: String
    Default: [password]
    
  DockerHubUsername:
    Type: String
    Default: [username]
    
  JsonFile:
    Type: String
    Default: music.json
    
  HTTPPort:
    Type: Number
    Default: 80
    
  HTTPSPort:
    Type: Number
    Default: 443
    
  LambdaArchitecture:
    Type: String
    Default: arm64
    
  LambdaHandler:
    Type: String
    Default: index.lambda_handler
    
  LambdaRuntime:
    Type: String
    Default: python3.8
    
  LambdaTimeout:
    Type: Number
    Default: 10
    
  ProjectEnvironmentComputeType:
    Type: String
    Default: BUILD_GENERAL1_SMALL
    
  ProjectEnvironmentImage:
    Type: String
    Default: aws/codebuild/amazonlinux2-aarch64-standard:2.0
    
  ProjectEnvironmentType:
    Type: String
    Default: ARM_CONTAINER
    
  ScalingTargetValue:
    Type: Number
    Default: 10.0
    
  TaskCpu:
    Type: Number
    Default: 512
    
  TaskMemory:
    Type: Number
    Default: 1024


Resources:
  SecretsManagerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-secretsmanager.yaml"
      Parameters:
        Password: !Ref DockerHubPassword
        Prefix: !Ref Prefix
        Username: !Ref DockerHubUsername
        
  ECRStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ecr.yaml"
      Parameters:
        Prefix: !Ref Prefix
        
  CodeStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - SecretsManagerStack
      - ECRStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-code.yaml"
      Parameters:
        BottlePort: !Ref BottlePort
        ECRRepositoryName: !GetAtt ECRStack.Outputs.ECRRepositoryName
        Prefix: !Ref Prefix
        ProjectEnvironmentComputeType: !Ref ProjectEnvironmentComputeType
        ProjectEnvironmentImage: !Ref ProjectEnvironmentImage
        ProjectEnvironmentType: !Ref ProjectEnvironmentType
        Secret: !GetAtt SecretsManagerStack.Outputs.Secret
        
  LambdaStack1:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - CodeStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-lambda-01.yaml"
      Parameters:
        Architecture: !Ref LambdaArchitecture
        CodeBuildProject: !GetAtt CodeStack.Outputs.CodeBuildProject
        Handler: !Ref LambdaHandler
        Prefix: !Ref Prefix
        Runtime: !Ref LambdaRuntime
        Secret: !GetAtt SecretsManagerStack.Outputs.Secret
        
  DynamodbStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-dynamodb.yaml"
      Parameters:
        Prefix: !Ref Prefix
        
  LambdaStack2:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DynamodbStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-lambda-02.yaml"
      Parameters:
        JsonS3Bucket: !Ref TemplateBucketName
        JsonS3Key: !Sub "${Prefix}/${JsonFile}"
        Handler: !Ref LambdaHandler
        Prefix: !Ref Prefix
        Runtime: !Ref LambdaRuntime
        Table: !GetAtt DynamodbStack.Outputs.Table
        Timeout: !Ref LambdaTimeout
        
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: a
        AvailabilityZone2: d
        BottlePort: !Ref BottlePort
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        CidrIp3: 10.0.3.0/24
        CidrIp4: 10.0.4.0/24
        HTTPPort: !Ref HTTPPort
        HTTPSPort: !Ref HTTPSPort
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16

  EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
      Parameters:
        EndpointSecurityGroup: !GetAtt VPCStack.Outputs.EndpointSecurityGroup
        Prefix: !Ref Prefix
        PrivateRouteTable: !GetAtt VPCStack.Outputs.PrivateRouteTable
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        VPC: !GetAtt VPCStack.Outputs.VPC
        
  ALBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-alb.yaml"
      Parameters:
        ALBSecurityGroup: !GetAtt VPCStack.Outputs.ALBSecurityGroup
        BottlePort: !Ref BottlePort
        HTTPPort: !Ref HTTPPort
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2
        Prefix: !Ref Prefix
        VPC: !GetAtt VPCStack.Outputs.VPC
        
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 2
        HealthCheckTimeoutSeconds: 5
        HealthCheckIntervalSeconds: 30
        HttpCode: 200
        
  FargateStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - LambdaStack1
      - LambdaStack2
      - ALBStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-fargate.yaml"
      Parameters:
        ALBTargetGroup: !GetAtt ALBStack.Outputs.ALBTargetGroup
        BottlePort: !Ref BottlePort
        ContainerSecurityGroup: !GetAtt VPCStack.Outputs.ContainerSecurityGroup
        ECRRepositoryName: !GetAtt ECRStack.Outputs.ECRRepositoryName
        Prefix: !Ref Prefix
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        ScalingTargetValue: !Ref ScalingTargetValue
        Table: !GetAtt DynamodbStack.Outputs.Table
        TaskCpu: !Ref TaskCpu
        TaskMemory: !Ref TaskMemory
