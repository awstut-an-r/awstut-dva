AWSTemplateFormatVersion: 2010-09-09

Parameters:
  AvailabilityZone1:
    Type: String
    
  #AvailabilityZone2:
  #  Type: String
    
  CidrIp1:
    Type: String
    
  CidrIp2:
    Type: String
    
  #CidrIp3:
  #  Type: String
  #  
  HTTPSPort:
    Type: Number
    
  #MySQLPort:
  #  Type: Number
    
  Prefix:
    Type: String

  VPCCidrBlock:
    Type: String
    
    
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      #EnableDnsHostnames: true
      #EnableDnsSupport: true
      
      
  IGW:
    Type: AWS::EC2::InternetGateway
  
  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW
      
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
          
  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      SubnetId: !Ref PublicSubnet
      
      
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone1}"
      CidrBlock: !Ref CidrIp1
      VpcId: !Ref VPC

  InstanceSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone1}"
      CidrBlock: !Ref CidrIp2
      VpcId: !Ref VPC
      
  #DBSubnet2:
  #  Type: AWS::EC2::Subnet
  #  Properties:
  #    AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone2}"
  #    CidrBlock: !Ref CidrIp2
  #    VpcId: !Ref VPC
      
  #DBSubnet3:
  #  Type: AWS::EC2::Subnet
  #  Properties:
  #    AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone2}"
  #    CidrBlock: !Ref CidrIp3
  #    VpcId: !Ref VPC
  
  
  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      
  RouteToInternet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicSubnetRouteTable
      
      
  InstanceSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      
  RouteToNATGateway:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref InstanceSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway
      
  InstanceSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InstanceSubnet
      RouteTableId: !Ref InstanceSubnetRouteTable
      
  #DBSubnetRouteTableAssociation:
  #  Type: AWS::EC2::SubnetRouteTableAssociation
  #  Properties:
  #    SubnetId: !Ref DBSubnet1
  #    RouteTableId: !Ref PrivateRouteTable
  #    
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Prefix}-InstanceSecurityGroup"
      GroupDescription: Deny All.
      VpcId: !Ref VPC
      
  #FunctionSecurityGroup:
  #  Type: AWS::EC2::SecurityGroup
  #  Properties:
  #    GroupName: !Sub "${Prefix}-FunctionSecurityGroup"
  #    GroupDescription: Deny All.
  #    VpcId: !Ref VPC
  #    
  #DBSecurityGroup:
  #  Type: AWS::EC2::SecurityGroup
  #  Properties:
  #    GroupName: !Sub "${Prefix}-DBSecurityGroup"
  #    GroupDescription: Allow MySQL from Instance and Function.
  #    VpcId: !Ref VPC
  #    SecurityGroupIngress:
  #      - IpProtocol: tcp
  #        FromPort: !Ref MySQLPort
  #        ToPort: !Ref MySQLPort
  #        SourceSecurityGroupId: !Ref InstanceSecurityGroup
  #      - IpProtocol: tcp
  #        FromPort: !Ref MySQLPort
  #        ToPort: !Ref MySQLPort
  #        SourceSecurityGroupId: !Ref FunctionSecurityGroup
  #        
  #EndpointSecurityGroup:
  #  Type: AWS::EC2::SecurityGroup
  #  Properties:
  #    GroupName: !Sub "${Prefix}-EndpointSecurityGroup"
  #    GroupDescription: Allow HTTPS from InstanceSecurityGroup.
  #    VpcId: !Ref VPC
  #    SecurityGroupIngress:
  #      - IpProtocol: tcp
  #        FromPort: !Ref HTTPSPort
  #        ToPort: !Ref HTTPSPort
  #        SourceSecurityGroupId: !Ref InstanceSecurityGroup
          
          
Outputs:
  InstanceSubnet:
    Value: !Ref InstanceSubnet

  #DBSubnet1:
  #  Value: !Ref DBSubnet1
  #  
  #DBSubnet2:
  #  Value: !Ref DBSubnet2
    
  #DBSubnet3:
  #  Value: !Ref DBSubnet3
  
  #RouteTable:
  #  Value: !Ref RouteTable
    
  InstanceSecurityGroup:
    Value: !Ref InstanceSecurityGroup
    
  #FunctionSecurityGroup:
  #  Value: !Ref FunctionSecurityGroup
  #  
  #DBSecurityGroup:
  #  Value: !Ref DBSecurityGroup
  
  #EndpointSecurityGroup:
  #  Value: !Ref EndpointSecurityGroup
    
  VPC:
    Value: !Ref VPC
