AWSTemplateFormatVersion: 2010-09-09

Parameters:
  BucketName:
    Type: String

  CollectionEndpoint:
    Type: String

  KinesisOpenSearchServerlessDestinationRoleArn:
    Type: String

  OpenSearchIndexName:
    Type: String
  
  Prefix:
    Type: String
    
  ShardCount:
    Type: Number
    

Resources:
  KinesisDataStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub "${Prefix}-DataStream"
      RetentionPeriodHours: 24
      ShardCount: !Ref ShardCount

  KinesisFirehoseDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      AmazonOpenSearchServerlessDestinationConfiguration: 
        CloudWatchLoggingOptions: 
          Enabled: true
          LogGroupName: !Ref LogGroup
          LogStreamName: !Ref LogStream
        CollectionEndpoint: !Ref CollectionEndpoint
        IndexName: !Ref OpenSearchIndexName
        RoleARN: !Ref KinesisOpenSearchServerlessDestinationRoleArn
        S3BackupMode: FailedDocumentsOnly
        S3Configuration: 
          BucketARN: !Sub "arn:aws:s3:::${BucketName}"
          CompressionFormat: GZIP
          Prefix: firehose/
          RoleARN: !GetAtt KinesisS3DestinationRole.Arn
      DeliveryStreamName: !Sub "${Prefix}-DeliveryStream"
      DeliveryStreamType: KinesisStreamAsSource
      KinesisStreamSourceConfiguration: 
        KinesisStreamARN: !GetAtt KinesisDataStream.Arn
        RoleARN: !GetAtt KinesisStreamSourceRole.Arn

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Sub "${Prefix}-KinesisFirehoseDeliveryStream"
     
  LogStream:
    Type: AWS::Logs::LogStream
    Properties: 
      LogGroupName: !Ref LogGroup
      LogStreamName: test-stream
        
  KinesisStreamSourceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - firehose.amazonaws.com
      Policies:
        - PolicyName: KinesisStreamSourcePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:DescribeStream
                  - kinesis:GetShardIterator
                  - kinesis:GetRecords
                  - kinesis:ListShards
                Resource:
                  - !GetAtt KinesisDataStream.Arn

  KinesisS3DestinationRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - firehose.amazonaws.com
      Policies:
        - PolicyName: KinesisS3DestinationPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                Resource:
                  - !Sub "arn:aws:s3:::${BucketName}"
                  - !Sub "arn:aws:s3:::${BucketName}/*"


Outputs:
  KinesisDataStreamName:
    Value: !Ref KinesisDataStream
